{"ast":null,"code":"import { GraphQLClient } from 'graphql-request';\nimport axios from 'axios';\n\n// GraphQL client for Doma Subgraph\nexport const graphqlClient = new GraphQLClient(process.env.REACT_APP_DOMA_SUBGRAPH_URL || 'https://api-testnet.doma.xyz/graphql', {\n  headers: {\n    ...(process.env.REACT_APP_DOMA_API_KEY && {\n      'Api-Key': process.env.REACT_APP_DOMA_API_KEY\n    })\n  }\n});\n\n// REST API client for Doma API\nexport const restClient = axios.create({\n  baseURL: process.env.REACT_APP_DOMA_API_BASE_URL || 'https://api-testnet.doma.xyz',\n  headers: {\n    'Content-Type': 'application/json',\n    ...(process.env.REACT_APP_DOMA_API_KEY && {\n      'Api-Key': process.env.REACT_APP_DOMA_API_KEY\n    })\n  }\n});\n\n// Add request interceptor for debugging\nrestClient.interceptors.request.use(config => {\n  var _config$method;\n  console.log('Making API request:', (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\nrestClient.interceptors.response.use(response => {\n  console.log('API response:', response.status, response.config.url);\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$response3, _error$response4;\n  console.error('Response error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    console.error('Authentication failed - check your API key');\n  } else if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 429) {\n    console.error('Rate limit exceeded - please wait before making more requests');\n  }\n  return Promise.reject(error);\n});\n\n// Helper function to check API connectivity\nexport async function checkApiHealth() {\n  const results = {\n    graphql: false,\n    rest: false\n  };\n  try {\n    // Test GraphQL endpoint\n    const graphqlResponse = await graphqlClient.request(`\n      query {\n        _meta {\n          deployment\n          hasIndexingErrors\n        }\n      }\n    `);\n    results.graphql = !!graphqlResponse;\n  } catch (error) {\n    console.error('GraphQL health check failed:', error);\n  }\n  try {\n    // Test REST endpoint\n    const restResponse = await restClient.get('/health');\n    results.rest = restResponse.status === 200;\n  } catch (error) {\n    console.error('REST health check failed:', error);\n  }\n  return results;\n}\nexport default {\n  graphql: graphqlClient,\n  rest: restClient,\n  checkHealth: checkApiHealth\n};","map":{"version":3,"names":["GraphQLClient","axios","graphqlClient","process","env","REACT_APP_DOMA_SUBGRAPH_URL","headers","REACT_APP_DOMA_API_KEY","restClient","create","baseURL","REACT_APP_DOMA_API_BASE_URL","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","_error$response2","_error$response3","_error$response4","data","checkApiHealth","results","graphql","rest","graphqlResponse","restResponse","get","checkHealth"],"sources":["/Users/kaelabbott/Downloads/autozama/doma/src/lib/doma-client.ts"],"sourcesContent":["import { GraphQLClient } from 'graphql-request';\nimport axios, { AxiosInstance } from 'axios';\n\n// GraphQL client for Doma Subgraph\nexport const graphqlClient = new GraphQLClient(\n  process.env.REACT_APP_DOMA_SUBGRAPH_URL || 'https://api-testnet.doma.xyz/graphql',\n  {\n    headers: {\n      ...(process.env.REACT_APP_DOMA_API_KEY && {\n        'Api-Key': process.env.REACT_APP_DOMA_API_KEY,\n      }),\n    },\n  }\n);\n\n// REST API client for Doma API\nexport const restClient: AxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_DOMA_API_BASE_URL || 'https://api-testnet.doma.xyz',\n  headers: {\n    'Content-Type': 'application/json',\n    ...(process.env.REACT_APP_DOMA_API_KEY && {\n      'Api-Key': process.env.REACT_APP_DOMA_API_KEY,\n    }),\n  },\n});\n\n// Add request interceptor for debugging\nrestClient.interceptors.request.use(\n  (config) => {\n    console.log('Making API request:', config.method?.toUpperCase(), config.url);\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for error handling\nrestClient.interceptors.response.use(\n  (response) => {\n    console.log('API response:', response.status, response.config.url);\n    return response;\n  },\n  (error) => {\n    console.error('Response error:', error.response?.status, error.response?.data);\n    \n    if (error.response?.status === 401) {\n      console.error('Authentication failed - check your API key');\n    } else if (error.response?.status === 429) {\n      console.error('Rate limit exceeded - please wait before making more requests');\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Helper function to check API connectivity\nexport async function checkApiHealth(): Promise<{ graphql: boolean; rest: boolean }> {\n  const results = { graphql: false, rest: false };\n\n  try {\n    // Test GraphQL endpoint\n    const graphqlResponse = await graphqlClient.request(`\n      query {\n        _meta {\n          deployment\n          hasIndexingErrors\n        }\n      }\n    `);\n    results.graphql = !!graphqlResponse;\n  } catch (error) {\n    console.error('GraphQL health check failed:', error);\n  }\n\n  try {\n    // Test REST endpoint\n    const restResponse = await restClient.get('/health');\n    results.rest = restResponse.status === 200;\n  } catch (error) {\n    console.error('REST health check failed:', error);\n  }\n\n  return results;\n}\n\nexport default {\n  graphql: graphqlClient,\n  rest: restClient,\n  checkHealth: checkApiHealth,\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,KAAK,MAAyB,OAAO;;AAE5C;AACA,OAAO,MAAMC,aAAa,GAAG,IAAIF,aAAa,CAC5CG,OAAO,CAACC,GAAG,CAACC,2BAA2B,IAAI,sCAAsC,EACjF;EACEC,OAAO,EAAE;IACP,IAAIH,OAAO,CAACC,GAAG,CAACG,sBAAsB,IAAI;MACxC,SAAS,EAAEJ,OAAO,CAACC,GAAG,CAACG;IACzB,CAAC;EACH;AACF,CACF,CAAC;;AAED;AACA,OAAO,MAAMC,UAAyB,GAAGP,KAAK,CAACQ,MAAM,CAAC;EACpDC,OAAO,EAAEP,OAAO,CAACC,GAAG,CAACO,2BAA2B,IAAI,8BAA8B;EAClFL,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,IAAIH,OAAO,CAACC,GAAG,CAACG,sBAAsB,IAAI;MACxC,SAAS,EAAEJ,OAAO,CAACC,GAAG,CAACG;IACzB,CAAC;EACH;AACF,CAAC,CAAC;;AAEF;AACAC,UAAU,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAChCC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACVC,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAAF,cAAA,GAAED,MAAM,CAACI,MAAM,cAAAH,cAAA,uBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,EAAEL,MAAM,CAACM,GAAG,CAAC;EAC5E,OAAON,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACTL,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAd,UAAU,CAACI,YAAY,CAACa,QAAQ,CAACX,GAAG,CACjCW,QAAQ,IAAK;EACZR,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEO,QAAQ,CAACC,MAAM,EAAED,QAAQ,CAACV,MAAM,CAACM,GAAG,CAAC;EAClE,OAAOI,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAK,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;EACTb,OAAO,CAACK,KAAK,CAAC,iBAAiB,GAAAK,eAAA,GAAEL,KAAK,CAACG,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBD,MAAM,GAAAE,gBAAA,GAAEN,KAAK,CAACG,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBG,IAAI,CAAC;EAE9E,IAAI,EAAAF,gBAAA,GAAAP,KAAK,CAACG,QAAQ,cAAAI,gBAAA,uBAAdA,gBAAA,CAAgBH,MAAM,MAAK,GAAG,EAAE;IAClCT,OAAO,CAACK,KAAK,CAAC,4CAA4C,CAAC;EAC7D,CAAC,MAAM,IAAI,EAAAQ,gBAAA,GAAAR,KAAK,CAACG,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBJ,MAAM,MAAK,GAAG,EAAE;IACzCT,OAAO,CAACK,KAAK,CAAC,+DAA+D,CAAC;EAChF;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,eAAeU,cAAcA,CAAA,EAAiD;EACnF,MAAMC,OAAO,GAAG;IAAEC,OAAO,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAM,CAAC;EAE/C,IAAI;IACF;IACA,MAAMC,eAAe,GAAG,MAAMlC,aAAa,CAACW,OAAO,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;IACFoB,OAAO,CAACC,OAAO,GAAG,CAAC,CAACE,eAAe;EACrC,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACtD;EAEA,IAAI;IACF;IACA,MAAMe,YAAY,GAAG,MAAM7B,UAAU,CAAC8B,GAAG,CAAC,SAAS,CAAC;IACpDL,OAAO,CAACE,IAAI,GAAGE,YAAY,CAACX,MAAM,KAAK,GAAG;EAC5C,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACnD;EAEA,OAAOW,OAAO;AAChB;AAEA,eAAe;EACbC,OAAO,EAAEhC,aAAa;EACtBiC,IAAI,EAAE3B,UAAU;EAChB+B,WAAW,EAAEP;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}