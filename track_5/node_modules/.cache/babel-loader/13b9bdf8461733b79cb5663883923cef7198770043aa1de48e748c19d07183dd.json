{"ast":null,"code":"import { gql } from 'graphql-request';\n\n// Get domains with pagination and filters\nexport const GET_DOMAINS = gql`\n  query GetDomains($first: Int!, $skip: Int!, $where: Name_filter) {\n    names(first: $first, skip: $skip, where: $where, orderBy: createdAt, orderDirection: desc) {\n      id\n      name\n      tokenId\n      ownerAddress\n      createdAt\n      expiresAt\n      registrationCost\n      renewalCost\n      isListed\n      currentPrice\n      listingId\n      offers {\n        id\n        price\n        offerAddress\n        expiresAt\n        status\n      }\n    }\n  }\n`;\n\n// Get a specific domain by name or token ID\nexport const GET_DOMAIN = gql`\n  query GetDomain($id: ID!) {\n    name(id: $id) {\n      id\n      name\n      tokenId\n      ownerAddress\n      createdAt\n      expiresAt\n      registrationCost\n      renewalCost\n      isListed\n      currentPrice\n      listingId\n      offers {\n        id\n        price\n        offerAddress\n        expiresAt\n        status\n        createdAt\n      }\n      activities {\n        id\n        type\n        fromAddress\n        toAddress\n        price\n        timestamp\n        transactionHash\n      }\n    }\n  }\n`;\n\n// Get domain statistics\nexport const GET_DOMAIN_STATISTICS = gql`\n  query GetDomainStatistics {\n    domainStats(id: \"global\") {\n      totalDomains\n      totalVolume\n      totalSales\n      averagePrice\n      floorPrice\n      topSale\n    }\n  }\n`;\n\n// Get marketplace listings\nexport const GET_LISTINGS = gql`\n  query GetListings($first: Int!, $skip: Int!, $where: Listing_filter) {\n    listings(first: $first, skip: $skip, where: $where, orderBy: createdAt, orderDirection: desc) {\n      id\n      tokenId\n      price\n      seller\n      buyer\n      status\n      createdAt\n      expiresAt\n      domain {\n        id\n        name\n        tokenId\n        ownerAddress\n      }\n    }\n  }\n`;\n\n// Get offers for domains\nexport const GET_OFFERS = gql`\n  query GetOffers($first: Int!, $skip: Int!, $where: Offer_filter) {\n    offers(first: $first, skip: $skip, where: $where, orderBy: createdAt, orderDirection: desc) {\n      id\n      tokenId\n      price\n      offerAddress\n      status\n      createdAt\n      expiresAt\n      domain {\n        id\n        name\n        tokenId\n        ownerAddress\n      }\n    }\n  }\n`;\n\n// Get token activities (transfers, sales, etc.)\nexport const GET_TOKEN_ACTIVITIES = gql`\n  query GetTokenActivities($tokenId: String!, $first: Int!, $skip: Int!) {\n    tokenActivities(\n      where: { tokenId: $tokenId }\n      first: $first\n      skip: $skip\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      id\n      type\n      fromAddress\n      toAddress\n      price\n      timestamp\n      transactionHash\n      blockNumber\n      domain {\n        id\n        name\n        tokenId\n      }\n    }\n  }\n`;\n\n// Get name activities for a specific domain name\nexport const GET_NAME_ACTIVITIES = gql`\n  query GetNameActivities($name: String!, $first: Int!, $skip: Int!) {\n    nameActivities(\n      where: { domain_: { name: $name } }\n      first: $first\n      skip: $skip\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      id\n      type\n      fromAddress\n      toAddress\n      price\n      timestamp\n      transactionHash\n      blockNumber\n      domain {\n        id\n        name\n        tokenId\n        ownerAddress\n      }\n    }\n  }\n`;\n\n// Get trending domains\nexport const GET_TRENDING_DOMAINS = gql`\n  query GetTrendingDomains($first: Int!) {\n    names(\n      first: $first\n      orderBy: activityCount\n      orderDirection: desc\n      where: { activityCount_gt: 0 }\n    ) {\n      id\n      name\n      tokenId\n      ownerAddress\n      activityCount\n      isListed\n      currentPrice\n      offers {\n        id\n        price\n        status\n      }\n    }\n  }\n`;\n\n// Get expiring domains\nexport const GET_EXPIRING_DOMAINS = gql`\n  query GetExpiringDomains($expiryThreshold: BigInt!, $first: Int!) {\n    names(\n      first: $first\n      where: { expiresAt_lt: $expiryThreshold, expiresAt_gt: \"0\" }\n      orderBy: expiresAt\n      orderDirection: asc\n    ) {\n      id\n      name\n      tokenId\n      ownerAddress\n      expiresAt\n      registrationCost\n      renewalCost\n      isListed\n      currentPrice\n    }\n  }\n`;","map":{"version":3,"names":["gql","GET_DOMAINS","GET_DOMAIN","GET_DOMAIN_STATISTICS","GET_LISTINGS","GET_OFFERS","GET_TOKEN_ACTIVITIES","GET_NAME_ACTIVITIES","GET_TRENDING_DOMAINS","GET_EXPIRING_DOMAINS"],"sources":["/Users/kaelabbott/Downloads/autozama/doma/src/lib/graphql-queries.ts"],"sourcesContent":["import { gql } from 'graphql-request';\n\n// Get domains with pagination and filters\nexport const GET_DOMAINS = gql`\n  query GetDomains($first: Int!, $skip: Int!, $where: Name_filter) {\n    names(first: $first, skip: $skip, where: $where, orderBy: createdAt, orderDirection: desc) {\n      id\n      name\n      tokenId\n      ownerAddress\n      createdAt\n      expiresAt\n      registrationCost\n      renewalCost\n      isListed\n      currentPrice\n      listingId\n      offers {\n        id\n        price\n        offerAddress\n        expiresAt\n        status\n      }\n    }\n  }\n`;\n\n// Get a specific domain by name or token ID\nexport const GET_DOMAIN = gql`\n  query GetDomain($id: ID!) {\n    name(id: $id) {\n      id\n      name\n      tokenId\n      ownerAddress\n      createdAt\n      expiresAt\n      registrationCost\n      renewalCost\n      isListed\n      currentPrice\n      listingId\n      offers {\n        id\n        price\n        offerAddress\n        expiresAt\n        status\n        createdAt\n      }\n      activities {\n        id\n        type\n        fromAddress\n        toAddress\n        price\n        timestamp\n        transactionHash\n      }\n    }\n  }\n`;\n\n// Get domain statistics\nexport const GET_DOMAIN_STATISTICS = gql`\n  query GetDomainStatistics {\n    domainStats(id: \"global\") {\n      totalDomains\n      totalVolume\n      totalSales\n      averagePrice\n      floorPrice\n      topSale\n    }\n  }\n`;\n\n// Get marketplace listings\nexport const GET_LISTINGS = gql`\n  query GetListings($first: Int!, $skip: Int!, $where: Listing_filter) {\n    listings(first: $first, skip: $skip, where: $where, orderBy: createdAt, orderDirection: desc) {\n      id\n      tokenId\n      price\n      seller\n      buyer\n      status\n      createdAt\n      expiresAt\n      domain {\n        id\n        name\n        tokenId\n        ownerAddress\n      }\n    }\n  }\n`;\n\n// Get offers for domains\nexport const GET_OFFERS = gql`\n  query GetOffers($first: Int!, $skip: Int!, $where: Offer_filter) {\n    offers(first: $first, skip: $skip, where: $where, orderBy: createdAt, orderDirection: desc) {\n      id\n      tokenId\n      price\n      offerAddress\n      status\n      createdAt\n      expiresAt\n      domain {\n        id\n        name\n        tokenId\n        ownerAddress\n      }\n    }\n  }\n`;\n\n// Get token activities (transfers, sales, etc.)\nexport const GET_TOKEN_ACTIVITIES = gql`\n  query GetTokenActivities($tokenId: String!, $first: Int!, $skip: Int!) {\n    tokenActivities(\n      where: { tokenId: $tokenId }\n      first: $first\n      skip: $skip\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      id\n      type\n      fromAddress\n      toAddress\n      price\n      timestamp\n      transactionHash\n      blockNumber\n      domain {\n        id\n        name\n        tokenId\n      }\n    }\n  }\n`;\n\n// Get name activities for a specific domain name\nexport const GET_NAME_ACTIVITIES = gql`\n  query GetNameActivities($name: String!, $first: Int!, $skip: Int!) {\n    nameActivities(\n      where: { domain_: { name: $name } }\n      first: $first\n      skip: $skip\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      id\n      type\n      fromAddress\n      toAddress\n      price\n      timestamp\n      transactionHash\n      blockNumber\n      domain {\n        id\n        name\n        tokenId\n        ownerAddress\n      }\n    }\n  }\n`;\n\n// Get trending domains\nexport const GET_TRENDING_DOMAINS = gql`\n  query GetTrendingDomains($first: Int!) {\n    names(\n      first: $first\n      orderBy: activityCount\n      orderDirection: desc\n      where: { activityCount_gt: 0 }\n    ) {\n      id\n      name\n      tokenId\n      ownerAddress\n      activityCount\n      isListed\n      currentPrice\n      offers {\n        id\n        price\n        status\n      }\n    }\n  }\n`;\n\n// Get expiring domains\nexport const GET_EXPIRING_DOMAINS = gql`\n  query GetExpiringDomains($expiryThreshold: BigInt!, $first: Int!) {\n    names(\n      first: $first\n      where: { expiresAt_lt: $expiryThreshold, expiresAt_gt: \"0\" }\n      orderBy: expiresAt\n      orderDirection: asc\n    ) {\n      id\n      name\n      tokenId\n      ownerAddress\n      expiresAt\n      registrationCost\n      renewalCost\n      isListed\n      currentPrice\n    }\n  }\n`;\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,iBAAiB;;AAErC;AACA,OAAO,MAAMC,WAAW,GAAGD,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAGF,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMG,qBAAqB,GAAGH,GAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMI,YAAY,GAAGJ,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAGL,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMM,oBAAoB,GAAGN,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMO,mBAAmB,GAAGP,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMQ,oBAAoB,GAAGR,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMS,oBAAoB,GAAGT,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}