{"ast":null,"code":"import { gql } from 'graphql-request';\n\n// Get domains with pagination and filters - Updated to match Doma schema\nexport const GET_DOMAINS = gql`\n  query GetDomains($take: Int!, $skip: Int!, $name: String, $claimStatus: NamesQueryClaimStatus, $sortOrder: SortOrderType) {\n    names(take: $take, skip: $skip, name: $name, claimStatus: $claimStatus, sortOrder: $sortOrder) {\n      items {\n        name\n        expiresAt\n        tokenizedAt\n        eoi\n        transferLock\n        claimedBy\n        registrar {\n          name\n          ianaId\n        }\n        tokens {\n          tokenId\n          networkId\n          ownerAddress\n          type\n          startsAt\n          expiresAt\n          createdAt\n          explorerUrl\n          tokenAddress\n          chain {\n            name\n            networkId\n          }\n          listings {\n            id\n            externalId\n            price\n            offererAddress\n            orderbook\n            currency {\n              name\n              symbol\n              decimals\n            }\n            expiresAt\n            createdAt\n          }\n        }\n      }\n      totalCount\n      pageSize\n      currentPage\n      totalPages\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n`;\n\n// Get a specific domain by name\nexport const GET_DOMAIN = gql`\n  query GetDomain($name: String!) {\n    name(name: $name) {\n      name\n      expiresAt\n      tokenizedAt\n      eoi\n      transferLock\n      claimedBy\n      registrar {\n        name\n        ianaId\n        websiteUrl\n        supportEmail\n      }\n      nameservers {\n        ldhName\n      }\n      dsKeys {\n        keyTag\n        algorithm\n        digest\n        digestType\n      }\n      tokens {\n        tokenId\n        networkId\n        ownerAddress\n        type\n        startsAt\n        expiresAt\n        createdAt\n        explorerUrl\n        tokenAddress\n        chain {\n          name\n          networkId\n        }\n        listings {\n          id\n          externalId\n          price\n          offererAddress\n          orderbook\n          currency {\n            name\n            symbol\n            decimals\n          }\n          expiresAt\n          createdAt\n        }\n        activities {\n          type\n          createdAt\n          ... on TokenMintedActivity {\n            tokenId\n            txHash\n            networkId\n            finalized\n          }\n          ... on TokenTransferredActivity {\n            tokenId\n            txHash\n            networkId\n            finalized\n            transferredTo\n            transferredFrom\n          }\n          ... on TokenListedActivity {\n            tokenId\n            txHash\n            networkId\n            finalized\n            orderId\n            startsAt\n            expiresAt\n            seller\n            buyer\n            payment {\n              price\n              tokenAddress\n              currencySymbol\n            }\n            orderbook\n          }\n        }\n      }\n      activities {\n        type\n        createdAt\n        ... on NameClaimedActivity {\n          sld\n          tld\n          claimedBy\n          txHash\n        }\n        ... on NameTokenizedActivity {\n          sld\n          tld\n          networkId\n          txHash\n        }\n        ... on NameRenewedActivity {\n          sld\n          tld\n          expiresAt\n          txHash\n        }\n      }\n    }\n  }\n`;\n\n// Get marketplace listings\nexport const GET_LISTINGS = gql`\n  query GetListings($take: Float!, $skip: Float!, $tlds: [String!], $createdSince: DateTime, $sld: String) {\n    listings(take: $take, skip: $skip, tlds: $tlds, createdSince: $createdSince, sld: $sld) {\n      items {\n        id\n        externalId\n        price\n        offererAddress\n        orderbook\n        currency {\n          name\n          symbol\n          decimals\n        }\n        expiresAt\n        createdAt\n        updatedAt\n        name\n        nameExpiresAt\n        registrar {\n          name\n          ianaId\n        }\n        tokenId\n        tokenAddress\n        chain {\n          name\n          networkId\n        }\n      }\n      totalCount\n      pageSize\n      currentPage\n      totalPages\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n`;\n\n// Get offers for domains\nexport const GET_OFFERS = gql`\n  query GetOffers($take: Float!, $skip: Float!, $tokenId: String, $status: OfferStatus, $sortOrder: SortOrderType) {\n    offers(take: $take, skip: $skip, tokenId: $tokenId, status: $status, sortOrder: $sortOrder) {\n      items {\n        id\n        externalId\n        price\n        offererAddress\n        orderbook\n        currency {\n          name\n          symbol\n          decimals\n        }\n        expiresAt\n        createdAt\n        name\n        nameExpiresAt\n        registrar {\n          name\n          ianaId\n        }\n        tokenId\n        tokenAddress\n        chain {\n          name\n          networkId\n        }\n      }\n      totalCount\n      pageSize\n      currentPage\n      totalPages\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n`;\n\n// Get token activities\nexport const GET_TOKEN_ACTIVITIES = gql`\n  query GetTokenActivities($tokenId: String!, $take: Float!, $skip: Float!, $sortOrder: SortOrderType) {\n    tokenActivities(tokenId: $tokenId, take: $take, skip: $skip, sortOrder: $sortOrder) {\n      items {\n        type\n        createdAt\n        ... on TokenMintedActivity {\n          tokenId\n          txHash\n          networkId\n          finalized\n        }\n        ... on TokenTransferredActivity {\n          tokenId\n          txHash\n          networkId\n          finalized\n          transferredTo\n          transferredFrom\n        }\n        ... on TokenListedActivity {\n          tokenId\n          txHash\n          networkId\n          finalized\n          orderId\n          startsAt\n          expiresAt\n          seller\n          buyer\n          payment {\n            price\n            tokenAddress\n            currencySymbol\n          }\n          orderbook\n        }\n        ... on TokenOfferReceivedActivity {\n          tokenId\n          txHash\n          networkId\n          finalized\n          orderId\n          expiresAt\n          buyer\n          seller\n          payment {\n            price\n            tokenAddress\n            currencySymbol\n          }\n          orderbook\n        }\n        ... on TokenPurchasedActivity {\n          tokenId\n          txHash\n          networkId\n          finalized\n          orderId\n          purchasedAt\n          seller\n          buyer\n          payment {\n            price\n            tokenAddress\n            currencySymbol\n          }\n          orderbook\n        }\n      }\n      totalCount\n      pageSize\n      currentPage\n      totalPages\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n`;\n\n// Get name activities for a specific domain name\nexport const GET_NAME_ACTIVITIES = gql`\n  query GetNameActivities($name: String!, $take: Float!, $skip: Float!, $sortOrder: SortOrderType) {\n    nameActivities(name: $name, take: $take, skip: $skip, sortOrder: $sortOrder) {\n      items {\n        type\n        createdAt\n        ... on NameClaimedActivity {\n          sld\n          tld\n          claimedBy\n          txHash\n        }\n        ... on NameTokenizedActivity {\n          sld\n          tld\n          networkId\n          txHash\n        }\n        ... on NameRenewedActivity {\n          sld\n          tld\n          expiresAt\n          txHash\n        }\n        ... on NameDetokenizedActivity {\n          sld\n          tld\n          networkId\n          txHash\n        }\n      }\n      totalCount\n      pageSize\n      currentPage\n      totalPages\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n`;\n\n// Get name statistics\nexport const GET_NAME_STATISTICS = gql`\n  query GetNameStatistics($tokenId: String!) {\n    nameStatistics(tokenId: $tokenId) {\n      name\n      activeOffers\n      offersLast3Days\n      highestOffer {\n        id\n        externalId\n        price\n        offererAddress\n        orderbook\n        currency {\n          name\n          symbol\n          decimals\n        }\n        expiresAt\n        createdAt\n      }\n    }\n  }\n`;","map":{"version":3,"names":["gql","GET_DOMAINS","GET_DOMAIN","GET_LISTINGS","GET_OFFERS","GET_TOKEN_ACTIVITIES","GET_NAME_ACTIVITIES","GET_NAME_STATISTICS"],"sources":["/Users/kaelabbott/Downloads/autozama/doma/src/lib/graphql-queries.ts"],"sourcesContent":["import { gql } from 'graphql-request';\n\n// Get domains with pagination and filters - Updated to match Doma schema\nexport const GET_DOMAINS = gql`\n  query GetDomains($take: Int!, $skip: Int!, $name: String, $claimStatus: NamesQueryClaimStatus, $sortOrder: SortOrderType) {\n    names(take: $take, skip: $skip, name: $name, claimStatus: $claimStatus, sortOrder: $sortOrder) {\n      items {\n        name\n        expiresAt\n        tokenizedAt\n        eoi\n        transferLock\n        claimedBy\n        registrar {\n          name\n          ianaId\n        }\n        tokens {\n          tokenId\n          networkId\n          ownerAddress\n          type\n          startsAt\n          expiresAt\n          createdAt\n          explorerUrl\n          tokenAddress\n          chain {\n            name\n            networkId\n          }\n          listings {\n            id\n            externalId\n            price\n            offererAddress\n            orderbook\n            currency {\n              name\n              symbol\n              decimals\n            }\n            expiresAt\n            createdAt\n          }\n        }\n      }\n      totalCount\n      pageSize\n      currentPage\n      totalPages\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n`;\n\n// Get a specific domain by name\nexport const GET_DOMAIN = gql`\n  query GetDomain($name: String!) {\n    name(name: $name) {\n      name\n      expiresAt\n      tokenizedAt\n      eoi\n      transferLock\n      claimedBy\n      registrar {\n        name\n        ianaId\n        websiteUrl\n        supportEmail\n      }\n      nameservers {\n        ldhName\n      }\n      dsKeys {\n        keyTag\n        algorithm\n        digest\n        digestType\n      }\n      tokens {\n        tokenId\n        networkId\n        ownerAddress\n        type\n        startsAt\n        expiresAt\n        createdAt\n        explorerUrl\n        tokenAddress\n        chain {\n          name\n          networkId\n        }\n        listings {\n          id\n          externalId\n          price\n          offererAddress\n          orderbook\n          currency {\n            name\n            symbol\n            decimals\n          }\n          expiresAt\n          createdAt\n        }\n        activities {\n          type\n          createdAt\n          ... on TokenMintedActivity {\n            tokenId\n            txHash\n            networkId\n            finalized\n          }\n          ... on TokenTransferredActivity {\n            tokenId\n            txHash\n            networkId\n            finalized\n            transferredTo\n            transferredFrom\n          }\n          ... on TokenListedActivity {\n            tokenId\n            txHash\n            networkId\n            finalized\n            orderId\n            startsAt\n            expiresAt\n            seller\n            buyer\n            payment {\n              price\n              tokenAddress\n              currencySymbol\n            }\n            orderbook\n          }\n        }\n      }\n      activities {\n        type\n        createdAt\n        ... on NameClaimedActivity {\n          sld\n          tld\n          claimedBy\n          txHash\n        }\n        ... on NameTokenizedActivity {\n          sld\n          tld\n          networkId\n          txHash\n        }\n        ... on NameRenewedActivity {\n          sld\n          tld\n          expiresAt\n          txHash\n        }\n      }\n    }\n  }\n`;\n\n// Get marketplace listings\nexport const GET_LISTINGS = gql`\n  query GetListings($take: Float!, $skip: Float!, $tlds: [String!], $createdSince: DateTime, $sld: String) {\n    listings(take: $take, skip: $skip, tlds: $tlds, createdSince: $createdSince, sld: $sld) {\n      items {\n        id\n        externalId\n        price\n        offererAddress\n        orderbook\n        currency {\n          name\n          symbol\n          decimals\n        }\n        expiresAt\n        createdAt\n        updatedAt\n        name\n        nameExpiresAt\n        registrar {\n          name\n          ianaId\n        }\n        tokenId\n        tokenAddress\n        chain {\n          name\n          networkId\n        }\n      }\n      totalCount\n      pageSize\n      currentPage\n      totalPages\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n`;\n\n// Get offers for domains\nexport const GET_OFFERS = gql`\n  query GetOffers($take: Float!, $skip: Float!, $tokenId: String, $status: OfferStatus, $sortOrder: SortOrderType) {\n    offers(take: $take, skip: $skip, tokenId: $tokenId, status: $status, sortOrder: $sortOrder) {\n      items {\n        id\n        externalId\n        price\n        offererAddress\n        orderbook\n        currency {\n          name\n          symbol\n          decimals\n        }\n        expiresAt\n        createdAt\n        name\n        nameExpiresAt\n        registrar {\n          name\n          ianaId\n        }\n        tokenId\n        tokenAddress\n        chain {\n          name\n          networkId\n        }\n      }\n      totalCount\n      pageSize\n      currentPage\n      totalPages\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n`;\n\n// Get token activities\nexport const GET_TOKEN_ACTIVITIES = gql`\n  query GetTokenActivities($tokenId: String!, $take: Float!, $skip: Float!, $sortOrder: SortOrderType) {\n    tokenActivities(tokenId: $tokenId, take: $take, skip: $skip, sortOrder: $sortOrder) {\n      items {\n        type\n        createdAt\n        ... on TokenMintedActivity {\n          tokenId\n          txHash\n          networkId\n          finalized\n        }\n        ... on TokenTransferredActivity {\n          tokenId\n          txHash\n          networkId\n          finalized\n          transferredTo\n          transferredFrom\n        }\n        ... on TokenListedActivity {\n          tokenId\n          txHash\n          networkId\n          finalized\n          orderId\n          startsAt\n          expiresAt\n          seller\n          buyer\n          payment {\n            price\n            tokenAddress\n            currencySymbol\n          }\n          orderbook\n        }\n        ... on TokenOfferReceivedActivity {\n          tokenId\n          txHash\n          networkId\n          finalized\n          orderId\n          expiresAt\n          buyer\n          seller\n          payment {\n            price\n            tokenAddress\n            currencySymbol\n          }\n          orderbook\n        }\n        ... on TokenPurchasedActivity {\n          tokenId\n          txHash\n          networkId\n          finalized\n          orderId\n          purchasedAt\n          seller\n          buyer\n          payment {\n            price\n            tokenAddress\n            currencySymbol\n          }\n          orderbook\n        }\n      }\n      totalCount\n      pageSize\n      currentPage\n      totalPages\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n`;\n\n// Get name activities for a specific domain name\nexport const GET_NAME_ACTIVITIES = gql`\n  query GetNameActivities($name: String!, $take: Float!, $skip: Float!, $sortOrder: SortOrderType) {\n    nameActivities(name: $name, take: $take, skip: $skip, sortOrder: $sortOrder) {\n      items {\n        type\n        createdAt\n        ... on NameClaimedActivity {\n          sld\n          tld\n          claimedBy\n          txHash\n        }\n        ... on NameTokenizedActivity {\n          sld\n          tld\n          networkId\n          txHash\n        }\n        ... on NameRenewedActivity {\n          sld\n          tld\n          expiresAt\n          txHash\n        }\n        ... on NameDetokenizedActivity {\n          sld\n          tld\n          networkId\n          txHash\n        }\n      }\n      totalCount\n      pageSize\n      currentPage\n      totalPages\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n`;\n\n// Get name statistics\nexport const GET_NAME_STATISTICS = gql`\n  query GetNameStatistics($tokenId: String!) {\n    nameStatistics(tokenId: $tokenId) {\n      name\n      activeOffers\n      offersLast3Days\n      highestOffer {\n        id\n        externalId\n        price\n        offererAddress\n        orderbook\n        currency {\n          name\n          symbol\n          decimals\n        }\n        expiresAt\n        createdAt\n      }\n    }\n  }\n`;\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,iBAAiB;;AAEroBAAoB,GAAGL,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMM,mBAAmB,GAAGN,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,MAAMO,mBAAmB,GAAGP,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}